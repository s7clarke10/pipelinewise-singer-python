[tool.poetry]
name = "pipelinewise-singer-python"
version = "3.0.0"
description = "Singer.io utility library - PipelineWise compatible"
authors = []
license = "Apache 2.0"
readme = "README.md"
homepage = "https://github.com/s7clarke10/pipelinewise-singer-python"
repository = "https://github.com/s7clarke10/pipelinewise-singer-python"
keywords = ["singer", "meltano", "pipelinewise", "framework"]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 5 - Production/Stable", "Topic :: Singer"
]
packages = [
    { include = "singer" }
]
include = [
    { path = "singer/logging.conf", format = ["sdist", "wheel"] }
]


[tool.poetry.dependencies]
python = "^3.8"
pytz = "^2018.4"
jsonschema = "^4.19.2"
msgspec = "^0.18.0"
python-dateutil = "^2.7.3"
backoff = "2.2.1"
ciso8601 = "^2.3.1"

[tool.poetry.dev-dependencies]
pylint = "3.2.5"
pytest = "7.*, <9.*"
coverage = ">= 6.3, < 8.0"
ipython = "^8.12.1"
ipdb = "^0.13.13"
unify = "^0.5"

[tool.black]
line-length = 120

[tool.coverage.paths]
source = ["singer"]

[tool.coverage.run]
branch = true
source = ["singer"]

[tool.coverage.report]
fail_under = 76.0

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = "singer"
use_parentheses = true
known_first_party = "singer"
include_trailing_comma = true
add_imports = [
    "from __future__ import annotations",
]

[tool.pytest.ini_options]
addopts = "-v --doctest-modules"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
pipelinewise-singer-python = "pipelinewise_singer_python.__init__:main"